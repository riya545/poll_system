{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  // Add any auth tokens here if needed\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Handle unauthorized access\n    console.error('Unauthorized access');\n  }\n  return Promise.reject(error);\n});\n\n// Poll API functions\nexport const pollAPI = {\n  // Get all polls\n  getAllPolls: (params = {}) => {\n    return api.get('/polls', {\n      params\n    });\n  },\n  // Get poll by ID\n  getPollById: id => {\n    return api.get(`/polls/${id}`);\n  },\n  // Get poll results\n  getPollResults: id => {\n    return api.get(`/polls/${id}/results`);\n  },\n  // Create new poll\n  createPoll: pollData => {\n    return api.post('/polls', pollData);\n  },\n  // Update poll\n  updatePoll: (id, pollData) => {\n    return api.put(`/polls/${id}`, pollData);\n  },\n  // Delete poll\n  deletePoll: id => {\n    return api.delete(`/polls/${id}`);\n  }\n};\n\n// Vote API functions\nexport const voteAPI = {\n  // Submit vote\n  submitVote: voteData => {\n    return api.post('/votes', voteData);\n  },\n  // Get votes for a poll\n  getPollVotes: (pollId, params = {}) => {\n    return api.get(`/votes/poll/${pollId}`, {\n      params\n    });\n  },\n  // Check if user has voted\n  checkUserVote: (pollId, voterId) => {\n    return api.get(`/votes/check/${pollId}/${voterId}`);\n  },\n  // Get voting statistics\n  getVotingStats: pollId => {\n    return api.get(`/votes/stats/${pollId}`);\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","error","Promise","reject","response","_error$response","status","console","pollAPI","getAllPolls","params","get","getPollById","id","getPollResults","createPoll","pollData","post","updatePoll","put","deletePoll","delete","voteAPI","submitVote","voteData","getPollVotes","pollId","checkUserVote","voterId","getVotingStats"],"sources":["C:/poll-system-mern/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // Add any auth tokens here if needed\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Handle unauthorized access\r\n      console.error('Unauthorized access');\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Poll API functions\r\nexport const pollAPI = {\r\n  // Get all polls\r\n  getAllPolls: (params = {}) => {\r\n    return api.get('/polls', { params });\r\n  },\r\n\r\n  // Get poll by ID\r\n  getPollById: (id) => {\r\n    return api.get(`/polls/${id}`);\r\n  },\r\n\r\n  // Get poll results\r\n  getPollResults: (id) => {\r\n    return api.get(`/polls/${id}/results`);\r\n  },\r\n\r\n  // Create new poll\r\n  createPoll: (pollData) => {\r\n    return api.post('/polls', pollData);\r\n  },\r\n\r\n  // Update poll\r\n  updatePoll: (id, pollData) => {\r\n    return api.put(`/polls/${id}`, pollData);\r\n  },\r\n\r\n  // Delete poll\r\n  deletePoll: (id) => {\r\n    return api.delete(`/polls/${id}`);\r\n  },\r\n};\r\n\r\n// Vote API functions\r\nexport const voteAPI = {\r\n  // Submit vote\r\n  submitVote: (voteData) => {\r\n    return api.post('/votes', voteData);\r\n  },\r\n\r\n  // Get votes for a poll\r\n  getPollVotes: (pollId, params = {}) => {\r\n    return api.get(`/votes/poll/${pollId}`, { params });\r\n  },\r\n\r\n  // Check if user has voted\r\n  checkUserVote: (pollId, voterId) => {\r\n    return api.get(`/votes/check/${pollId}/${voterId}`);\r\n  },\r\n\r\n  // Get voting statistics\r\n  getVotingStats: (pollId) => {\r\n    return api.get(`/votes/stats/${pollId}`);\r\n  },\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAEjF;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV;EACA,OAAOA,MAAM;AACf,CAAC,EACAC,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAR,GAAG,CAACI,YAAY,CAACO,QAAQ,CAACL,GAAG,CAC1BK,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClC;IACAC,OAAO,CAACN,KAAK,CAAC,qBAAqB,CAAC;EACtC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMO,OAAO,GAAG;EACrB;EACAC,WAAW,EAAEA,CAACC,MAAM,GAAG,CAAC,CAAC,KAAK;IAC5B,OAAOjB,GAAG,CAACkB,GAAG,CAAC,QAAQ,EAAE;MAAED;IAAO,CAAC,CAAC;EACtC,CAAC;EAED;EACAE,WAAW,EAAGC,EAAE,IAAK;IACnB,OAAOpB,GAAG,CAACkB,GAAG,CAAC,UAAUE,EAAE,EAAE,CAAC;EAChC,CAAC;EAED;EACAC,cAAc,EAAGD,EAAE,IAAK;IACtB,OAAOpB,GAAG,CAACkB,GAAG,CAAC,UAAUE,EAAE,UAAU,CAAC;EACxC,CAAC;EAED;EACAE,UAAU,EAAGC,QAAQ,IAAK;IACxB,OAAOvB,GAAG,CAACwB,IAAI,CAAC,QAAQ,EAAED,QAAQ,CAAC;EACrC,CAAC;EAED;EACAE,UAAU,EAAEA,CAACL,EAAE,EAAEG,QAAQ,KAAK;IAC5B,OAAOvB,GAAG,CAAC0B,GAAG,CAAC,UAAUN,EAAE,EAAE,EAAEG,QAAQ,CAAC;EAC1C,CAAC;EAED;EACAI,UAAU,EAAGP,EAAE,IAAK;IAClB,OAAOpB,GAAG,CAAC4B,MAAM,CAAC,UAAUR,EAAE,EAAE,CAAC;EACnC;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,OAAO,GAAG;EACrB;EACAC,UAAU,EAAGC,QAAQ,IAAK;IACxB,OAAO/B,GAAG,CAACwB,IAAI,CAAC,QAAQ,EAAEO,QAAQ,CAAC;EACrC,CAAC;EAED;EACAC,YAAY,EAAEA,CAACC,MAAM,EAAEhB,MAAM,GAAG,CAAC,CAAC,KAAK;IACrC,OAAOjB,GAAG,CAACkB,GAAG,CAAC,eAAee,MAAM,EAAE,EAAE;MAAEhB;IAAO,CAAC,CAAC;EACrD,CAAC;EAED;EACAiB,aAAa,EAAEA,CAACD,MAAM,EAAEE,OAAO,KAAK;IAClC,OAAOnC,GAAG,CAACkB,GAAG,CAAC,gBAAgBe,MAAM,IAAIE,OAAO,EAAE,CAAC;EACrD,CAAC;EAED;EACAC,cAAc,EAAGH,MAAM,IAAK;IAC1B,OAAOjC,GAAG,CAACkB,GAAG,CAAC,gBAAgBe,MAAM,EAAE,CAAC;EAC1C;AACF,CAAC;AAED,eAAejC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}