{"ast":null,"code":"import { io } from 'socket.io-client';\nclass SocketService {\n  constructor() {\n    this.socket = null;\n    this.isConnected = false;\n  }\n  connect() {\n    if (!this.socket) {\n      this.socket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\n        transports: ['websocket', 'polling'],\n        timeout: 20000,\n        forceNew: true\n      });\n      this.socket.on('connect', () => {\n        console.log('Connected to server');\n        this.isConnected = true;\n      });\n      this.socket.on('disconnect', () => {\n        console.log('Disconnected from server');\n        this.isConnected = false;\n      });\n      this.socket.on('connect_error', error => {\n        console.error('Connection error:', error);\n        this.isConnected = false;\n      });\n    }\n    return this.socket;\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n      this.isConnected = false;\n    }\n  }\n  joinPoll(pollId) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('join-poll', pollId);\n    }\n  }\n  leavePoll(pollId) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('leave-poll', pollId);\n    }\n  }\n  onVoteUpdate(callback) {\n    if (this.socket) {\n      this.socket.on('vote-update', callback);\n    }\n  }\n  offVoteUpdate(callback) {\n    if (this.socket) {\n      this.socket.off('vote-update', callback);\n    }\n  }\n  getSocket() {\n    return this.socket;\n  }\n  isSocketConnected() {\n    return this.isConnected;\n  }\n}\n\n// Create singleton instance\nconst socketService = new SocketService();\nexport default socketService;","map":{"version":3,"names":["io","SocketService","constructor","socket","isConnected","connect","process","env","REACT_APP_SOCKET_URL","transports","timeout","forceNew","on","console","log","error","disconnect","joinPoll","pollId","emit","leavePoll","onVoteUpdate","callback","offVoteUpdate","off","getSocket","isSocketConnected","socketService"],"sources":["C:/poll-system-mern/frontend/src/services/socket.js"],"sourcesContent":["import { io } from 'socket.io-client';\r\n\r\nclass SocketService {\r\n  constructor() {\r\n    this.socket = null;\r\n    this.isConnected = false;\r\n  }\r\n\r\n  connect() {\r\n    if (!this.socket) {\r\n      this.socket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\r\n        transports: ['websocket', 'polling'],\r\n        timeout: 20000,\r\n        forceNew: true,\r\n      });\r\n\r\n      this.socket.on('connect', () => {\r\n        console.log('Connected to server');\r\n        this.isConnected = true;\r\n      });\r\n\r\n      this.socket.on('disconnect', () => {\r\n        console.log('Disconnected from server');\r\n        this.isConnected = false;\r\n      });\r\n\r\n      this.socket.on('connect_error', (error) => {\r\n        console.error('Connection error:', error);\r\n        this.isConnected = false;\r\n      });\r\n    }\r\n    return this.socket;\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n      this.socket = null;\r\n      this.isConnected = false;\r\n    }\r\n  }\r\n\r\n  joinPoll(pollId) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('join-poll', pollId);\r\n    }\r\n  }\r\n\r\n  leavePoll(pollId) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('leave-poll', pollId);\r\n    }\r\n  }\r\n\r\n  onVoteUpdate(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('vote-update', callback);\r\n    }\r\n  }\r\n\r\n  offVoteUpdate(callback) {\r\n    if (this.socket) {\r\n      this.socket.off('vote-update', callback);\r\n    }\r\n  }\r\n\r\n  getSocket() {\r\n    return this.socket;\r\n  }\r\n\r\n  isSocketConnected() {\r\n    return this.isConnected;\r\n  }\r\n}\r\n\r\n// Create singleton instance\r\nconst socketService = new SocketService();\r\n\r\nexport default socketService;\r\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,kBAAkB;AAErC,MAAMC,aAAa,CAAC;EAClBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,WAAW,GAAG,KAAK;EAC1B;EAEAC,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC,IAAI,CAACF,MAAM,EAAE;MAChB,IAAI,CAACA,MAAM,GAAGH,EAAE,CAACM,OAAO,CAACC,GAAG,CAACC,oBAAoB,IAAI,uBAAuB,EAAE;QAC5EC,UAAU,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC;QACpCC,OAAO,EAAE,KAAK;QACdC,QAAQ,EAAE;MACZ,CAAC,CAAC;MAEF,IAAI,CAACR,MAAM,CAACS,EAAE,CAAC,SAAS,EAAE,MAAM;QAC9BC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClC,IAAI,CAACV,WAAW,GAAG,IAAI;MACzB,CAAC,CAAC;MAEF,IAAI,CAACD,MAAM,CAACS,EAAE,CAAC,YAAY,EAAE,MAAM;QACjCC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QACvC,IAAI,CAACV,WAAW,GAAG,KAAK;MAC1B,CAAC,CAAC;MAEF,IAAI,CAACD,MAAM,CAACS,EAAE,CAAC,eAAe,EAAGG,KAAK,IAAK;QACzCF,OAAO,CAACE,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;QACzC,IAAI,CAACX,WAAW,GAAG,KAAK;MAC1B,CAAC,CAAC;IACJ;IACA,OAAO,IAAI,CAACD,MAAM;EACpB;EAEAa,UAAUA,CAAA,EAAG;IACX,IAAI,IAAI,CAACb,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACa,UAAU,CAAC,CAAC;MACxB,IAAI,CAACb,MAAM,GAAG,IAAI;MAClB,IAAI,CAACC,WAAW,GAAG,KAAK;IAC1B;EACF;EAEAa,QAAQA,CAACC,MAAM,EAAE;IACf,IAAI,IAAI,CAACf,MAAM,IAAI,IAAI,CAACC,WAAW,EAAE;MACnC,IAAI,CAACD,MAAM,CAACgB,IAAI,CAAC,WAAW,EAAED,MAAM,CAAC;IACvC;EACF;EAEAE,SAASA,CAACF,MAAM,EAAE;IAChB,IAAI,IAAI,CAACf,MAAM,IAAI,IAAI,CAACC,WAAW,EAAE;MACnC,IAAI,CAACD,MAAM,CAACgB,IAAI,CAAC,YAAY,EAAED,MAAM,CAAC;IACxC;EACF;EAEAG,YAAYA,CAACC,QAAQ,EAAE;IACrB,IAAI,IAAI,CAACnB,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACS,EAAE,CAAC,aAAa,EAAEU,QAAQ,CAAC;IACzC;EACF;EAEAC,aAAaA,CAACD,QAAQ,EAAE;IACtB,IAAI,IAAI,CAACnB,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACqB,GAAG,CAAC,aAAa,EAAEF,QAAQ,CAAC;IAC1C;EACF;EAEAG,SAASA,CAAA,EAAG;IACV,OAAO,IAAI,CAACtB,MAAM;EACpB;EAEAuB,iBAAiBA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACtB,WAAW;EACzB;AACF;;AAEA;AACA,MAAMuB,aAAa,GAAG,IAAI1B,aAAa,CAAC,CAAC;AAEzC,eAAe0B,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}