{"ast":null,"code":"// Utility functions for the poll system\n\n// Format date to readable string\nexport const formatDate = date => {\n  if (!date) return 'No date';\n  const d = new Date(date);\n  const now = new Date();\n  const diffInSeconds = Math.floor((now - d) / 1000);\n  if (diffInSeconds < 60) {\n    return 'Just now';\n  } else if (diffInSeconds < 3600) {\n    const minutes = Math.floor(diffInSeconds / 60);\n    return `${minutes} minute${minutes > 1 ? 's' : ''} ago`;\n  } else if (diffInSeconds < 86400) {\n    const hours = Math.floor(diffInSeconds / 3600);\n    return `${hours} hour${hours > 1 ? 's' : ''} ago`;\n  } else if (diffInSeconds < 2592000) {\n    const days = Math.floor(diffInSeconds / 86400);\n    return `${days} day${days > 1 ? 's' : ''} ago`;\n  } else {\n    return d.toLocaleDateString();\n  }\n};\n\n// Format time remaining\nexport const formatTimeRemaining = expiresAt => {\n  if (!expiresAt) return null;\n  const now = new Date();\n  const expiry = new Date(expiresAt);\n  const diffInSeconds = Math.floor((expiry - now) / 1000);\n  if (diffInSeconds <= 0) return 'Expired';\n  const days = Math.floor(diffInSeconds / 86400);\n  const hours = Math.floor(diffInSeconds % 86400 / 3600);\n  const minutes = Math.floor(diffInSeconds % 3600 / 60);\n  if (days > 0) {\n    return `${days}d ${hours}h ${minutes}m`;\n  } else if (hours > 0) {\n    return `${hours}h ${minutes}m`;\n  } else {\n    return `${minutes}m`;\n  }\n};\n\n// Generate unique voter ID\nexport const generateVoterId = () => {\n  return 'voter_' + Math.random().toString(36).substr(2, 9) + '_' + Date.now();\n};\n\n// Get category color class\nexport const getCategoryColor = category => {\n  const colors = {\n    general: 'category-general',\n    politics: 'category-politics',\n    sports: 'category-sports',\n    entertainment: 'category-entertainment',\n    technology: 'category-technology',\n    other: 'category-other'\n  };\n  return colors[category] || colors.general;\n};\n\n// Validate poll data\nexport const validatePollData = pollData => {\n  const errors = [];\n  if (!pollData.question || pollData.question.trim().length < 5) {\n    errors.push('Question must be at least 5 characters long');\n  }\n  if (!pollData.options || pollData.options.length < 2) {\n    errors.push('At least 2 options are required');\n  }\n  if (pollData.options) {\n    pollData.options.forEach((option, index) => {\n      if (!option || option.trim().length === 0) {\n        errors.push(`Option ${index + 1} cannot be empty`);\n      }\n    });\n  }\n  if (!pollData.creator || pollData.creator.trim().length === 0) {\n    errors.push('Creator name is required');\n  }\n  return errors;\n};\n\n// Calculate poll statistics\nexport const calculatePollStats = poll => {\n  const totalVotes = poll.options.reduce((sum, option) => sum + option.votes, 0);\n  return {\n    totalVotes,\n    options: poll.options.map(option => ({\n      ...option,\n      percentage: totalVotes > 0 ? Math.round(option.votes / totalVotes * 100) : 0\n    }))\n  };\n};\n\n// Check if poll is expired\nexport const isPollExpired = expiresAt => {\n  if (!expiresAt) return false;\n  return new Date() > new Date(expiresAt);\n};\n\n// Truncate text\nexport const truncateText = (text, maxLength = 100) => {\n  if (!text) return '';\n  if (text.length <= maxLength) return text;\n  return text.substr(0, maxLength) + '...';\n};\n\n// Copy to clipboard\nexport const copyToClipboard = async text => {\n  try {\n    await navigator.clipboard.writeText(text);\n    return true;\n  } catch (err) {\n    // Fallback for older browsers\n    const textArea = document.createElement('textarea');\n    textArea.value = text;\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n    try {\n      document.execCommand('copy');\n      document.body.removeChild(textArea);\n      return true;\n    } catch (err) {\n      document.body.removeChild(textArea);\n      return false;\n    }\n  }\n};\n\n// Debounce function\nexport const debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n// Get poll share URL\nexport const getPollShareUrl = pollId => {\n  return `${window.location.origin}/poll/${pollId}`;\n};\n\n// Format number with commas\nexport const formatNumber = num => {\n  return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};","map":{"version":3,"names":["formatDate","date","d","Date","now","diffInSeconds","Math","floor","minutes","hours","days","toLocaleDateString","formatTimeRemaining","expiresAt","expiry","generateVoterId","random","toString","substr","getCategoryColor","category","colors","general","politics","sports","entertainment","technology","other","validatePollData","pollData","errors","question","trim","length","push","options","forEach","option","index","creator","calculatePollStats","poll","totalVotes","reduce","sum","votes","map","percentage","round","isPollExpired","truncateText","text","maxLength","copyToClipboard","navigator","clipboard","writeText","err","textArea","document","createElement","value","body","appendChild","focus","select","execCommand","removeChild","debounce","func","wait","timeout","executedFunction","args","later","clearTimeout","setTimeout","getPollShareUrl","pollId","window","location","origin","formatNumber","num","replace"],"sources":["C:/poll-system-mern/frontend/src/utils/helpers.js"],"sourcesContent":["// Utility functions for the poll system\r\n\r\n// Format date to readable string\r\nexport const formatDate = (date) => {\r\n  if (!date) return 'No date';\r\n  \r\n  const d = new Date(date);\r\n  const now = new Date();\r\n  const diffInSeconds = Math.floor((now - d) / 1000);\r\n  \r\n  if (diffInSeconds < 60) {\r\n    return 'Just now';\r\n  } else if (diffInSeconds < 3600) {\r\n    const minutes = Math.floor(diffInSeconds / 60);\r\n    return `${minutes} minute${minutes > 1 ? 's' : ''} ago`;\r\n  } else if (diffInSeconds < 86400) {\r\n    const hours = Math.floor(diffInSeconds / 3600);\r\n    return `${hours} hour${hours > 1 ? 's' : ''} ago`;\r\n  } else if (diffInSeconds < 2592000) {\r\n    const days = Math.floor(diffInSeconds / 86400);\r\n    return `${days} day${days > 1 ? 's' : ''} ago`;\r\n  } else {\r\n    return d.toLocaleDateString();\r\n  }\r\n};\r\n\r\n// Format time remaining\r\nexport const formatTimeRemaining = (expiresAt) => {\r\n  if (!expiresAt) return null;\r\n  \r\n  const now = new Date();\r\n  const expiry = new Date(expiresAt);\r\n  const diffInSeconds = Math.floor((expiry - now) / 1000);\r\n  \r\n  if (diffInSeconds <= 0) return 'Expired';\r\n  \r\n  const days = Math.floor(diffInSeconds / 86400);\r\n  const hours = Math.floor((diffInSeconds % 86400) / 3600);\r\n  const minutes = Math.floor((diffInSeconds % 3600) / 60);\r\n  \r\n  if (days > 0) {\r\n    return `${days}d ${hours}h ${minutes}m`;\r\n  } else if (hours > 0) {\r\n    return `${hours}h ${minutes}m`;\r\n  } else {\r\n    return `${minutes}m`;\r\n  }\r\n};\r\n\r\n// Generate unique voter ID\r\nexport const generateVoterId = () => {\r\n  return 'voter_' + Math.random().toString(36).substr(2, 9) + '_' + Date.now();\r\n};\r\n\r\n// Get category color class\r\nexport const getCategoryColor = (category) => {\r\n  const colors = {\r\n    general: 'category-general',\r\n    politics: 'category-politics',\r\n    sports: 'category-sports',\r\n    entertainment: 'category-entertainment',\r\n    technology: 'category-technology',\r\n    other: 'category-other',\r\n  };\r\n  return colors[category] || colors.general;\r\n};\r\n\r\n// Validate poll data\r\nexport const validatePollData = (pollData) => {\r\n  const errors = [];\r\n  \r\n  if (!pollData.question || pollData.question.trim().length < 5) {\r\n    errors.push('Question must be at least 5 characters long');\r\n  }\r\n  \r\n  if (!pollData.options || pollData.options.length < 2) {\r\n    errors.push('At least 2 options are required');\r\n  }\r\n  \r\n  if (pollData.options) {\r\n    pollData.options.forEach((option, index) => {\r\n      if (!option || option.trim().length === 0) {\r\n        errors.push(`Option ${index + 1} cannot be empty`);\r\n      }\r\n    });\r\n  }\r\n  \r\n  if (!pollData.creator || pollData.creator.trim().length === 0) {\r\n    errors.push('Creator name is required');\r\n  }\r\n  \r\n  return errors;\r\n};\r\n\r\n// Calculate poll statistics\r\nexport const calculatePollStats = (poll) => {\r\n  const totalVotes = poll.options.reduce((sum, option) => sum + option.votes, 0);\r\n  \r\n  return {\r\n    totalVotes,\r\n    options: poll.options.map(option => ({\r\n      ...option,\r\n      percentage: totalVotes > 0 ? Math.round((option.votes / totalVotes) * 100) : 0\r\n    }))\r\n  };\r\n};\r\n\r\n// Check if poll is expired\r\nexport const isPollExpired = (expiresAt) => {\r\n  if (!expiresAt) return false;\r\n  return new Date() > new Date(expiresAt);\r\n};\r\n\r\n// Truncate text\r\nexport const truncateText = (text, maxLength = 100) => {\r\n  if (!text) return '';\r\n  if (text.length <= maxLength) return text;\r\n  return text.substr(0, maxLength) + '...';\r\n};\r\n\r\n// Copy to clipboard\r\nexport const copyToClipboard = async (text) => {\r\n  try {\r\n    await navigator.clipboard.writeText(text);\r\n    return true;\r\n  } catch (err) {\r\n    // Fallback for older browsers\r\n    const textArea = document.createElement('textarea');\r\n    textArea.value = text;\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n    try {\r\n      document.execCommand('copy');\r\n      document.body.removeChild(textArea);\r\n      return true;\r\n    } catch (err) {\r\n      document.body.removeChild(textArea);\r\n      return false;\r\n    }\r\n  }\r\n};\r\n\r\n// Debounce function\r\nexport const debounce = (func, wait) => {\r\n  let timeout;\r\n  return function executedFunction(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n};\r\n\r\n// Get poll share URL\r\nexport const getPollShareUrl = (pollId) => {\r\n  return `${window.location.origin}/poll/${pollId}`;\r\n};\r\n\r\n// Format number with commas\r\nexport const formatNumber = (num) => {\r\n  return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}